From c4e8aa245a243b020d6b7bd832674be871a43610 Mon Sep 17 00:00:00 2001
From: Richard Jones <rjones@redhat.com>
Date: Wed, 24 Mar 2010 22:02:34 +0000
Subject: [PATCH] Use ext4 dev tools on RHEL 5 (RHBZ#576688).

---
 daemon/ext2.c |  136 +++++++++++++++++++++++++++++++++++---------------------
 1 files changed, 85 insertions(+), 51 deletions(-)

diff --git a/daemon/ext2.c b/daemon/ext2.c
index 85ddce5..ff6459b 100644
--- a/daemon/ext2.c
+++ b/daemon/ext2.c
@@ -28,6 +28,32 @@
 #include "c-ctype.h"
 #include "actions.h"
 
+/* Choose which tools like mke2fs to use.  For RHEL 5 (only) there
+ * is a special set of tools which support ext2/3/4.  eg. On RHEL 5,
+ * mke2fs only supports ext2/3, but mke4fs supports ext2/3/4.
+ *
+ * We specify e4fsprogs in the package list to ensure it is loaded
+ * if it exists.
+ */
+static int
+e2prog (char *name)
+{
+  char *p = strstr (name, "e2");
+  if (!p) return 0;
+  p++;
+
+  *p = '4';
+  if (access (name, X_OK) == 0)
+    return 0;
+
+  *p = '2';
+  if (access (name, X_OK) == 0)
+    return 0;
+
+  reply_with_error ("cannot find required program %s", name);
+  return -1;
+}
+
 char **
 do_tune2fs_l (const char *device)
 {
@@ -37,7 +63,11 @@ do_tune2fs_l (const char *device)
   char **ret = NULL;
   int size = 0, alloc = 0;
 
-  r = command (&out, &err, "/sbin/tune2fs", "-l", device, NULL);
+  char prog[] = "/sbin/tune2fs";
+  if (e2prog (prog) == -1)
+    return NULL;
+
+  r = command (&out, &err, prog, "-l", device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (err);
@@ -49,7 +79,7 @@ do_tune2fs_l (const char *device)
   p = out;
 
   /* Discard the first line if it contains "tune2fs ...". */
-  if (STREQLEN (p, "tune2fs ", 8)) {
+  if (STRPREFIX (p, "tune2fs ") || STRPREFIX (p, "tune4fs ")) {
     p = strchr (p, '\n');
     if (p) p++;
     else {
@@ -121,7 +151,11 @@ do_set_e2label (const char *device, const char *label)
   int r;
   char *err;
 
-  r = command (NULL, &err, "/sbin/e2label", device, label, NULL);
+  char prog[] = "/sbin/e2label";
+  if (e2prog (prog) == -1)
+    return -1;
+
+  r = command (NULL, &err, prog, device, label, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (err);
@@ -138,7 +172,11 @@ do_get_e2label (const char *device)
   int r, len;
   char *out, *err;
 
-  r = command (&out, &err, "/sbin/e2label", device, NULL);
+  char prog[] = "/sbin/e2label";
+  if (e2prog (prog) == -1)
+    return NULL;
+
+  r = command (&out, &err, prog, device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (out);
@@ -162,7 +200,11 @@ do_set_e2uuid (const char *device, const char *uuid)
   int r;
   char *err;
 
-  r = command (NULL, &err, "/sbin/tune2fs", "-U", uuid, device, NULL);
+  char prog[] = "/sbin/tune2fs";
+  if (e2prog (prog) == -1)
+    return -1;
+
+  r = command (NULL, &err, prog, "-U", uuid, device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (err);
@@ -183,8 +225,11 @@ do_get_e2uuid (const char *device)
    * to use tune2fs -l and then look for a particular string in
    * the output.
    */
+  char prog[] = "/sbin/tune2fs";
+  if (e2prog (prog) == -1)
+    return NULL;
 
-  r = command (&out, &err, "/sbin/tune2fs", "-l", device, NULL);
+  r = command (&out, &err, prog, "-l", device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (out);
@@ -240,7 +285,11 @@ do_resize2fs (const char *device)
   char *err;
   int r;
 
-  r = command (NULL, &err, "/sbin/resize2fs", device, NULL);
+  char prog[] = "/sbin/resize2fs";
+  if (e2prog (prog) == -1)
+    return -1;
+
+  r = command (NULL, &err, prog, device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (err);
@@ -257,7 +306,11 @@ do_e2fsck_f (const char *device)
   char *err;
   int r;
 
-  r = command (NULL, &err, "/sbin/e2fsck", "-p", "-f", device, NULL);
+  char prog[] = "/sbin/e2fsck";
+  if (e2prog (prog) == -1)
+    return -1;
+
+  r = command (NULL, &err, prog, "-p", "-f", device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
     free (err);
@@ -274,11 +327,15 @@ do_mke2journal (int blocksize, const char *device)
   char *err;
   int r;
 
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
+
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
 
   r = command (NULL, &err,
-               "/sbin/mke2fs", "-O", "journal_dev", "-b", blocksize_s,
+               prog, "-O", "journal_dev", "-b", blocksize_s,
                device, NULL);
   if (r == -1) {
     reply_with_error ("%s", err);
@@ -296,11 +353,15 @@ do_mke2journal_L (int blocksize, const char *label, const char *device)
   char *err;
   int r;
 
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
+
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
 
   r = command (NULL, &err,
-               "/sbin/mke2fs", "-O", "journal_dev", "-b", blocksize_s,
+               prog, "-O", "journal_dev", "-b", blocksize_s,
                "-L", label,
                device, NULL);
   if (r == -1) {
@@ -319,11 +380,15 @@ do_mke2journal_U (int blocksize, const char *uuid, const char *device)
   char *err;
   int r;
 
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
+
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
 
   r = command (NULL, &err,
-               "/sbin/mke2fs", "-O", "journal_dev", "-b", blocksize_s,
+               prog, "-O", "journal_dev", "-b", blocksize_s,
                "-U", uuid,
                device, NULL);
   if (r == -1) {
@@ -336,40 +401,6 @@ do_mke2journal_U (int blocksize, const char *uuid, const char *device)
   return 0;
 }
 
-/* Run mke2fs to create a filesystem of type fstype, where fstype
- * is the string "ext2", "ext3" or "ext4".
- *
- * This is more complex than it seems.
- *
- * On RHEL 5, the -t option was deprecated.  Moreover RHEL <= 5.4
- * systems have a bug where the -t option doesn't work (it doesn't
- * correctly ignore the following argument).
- *
- * On RHEL 5, to create an ext4dev filesystem you have to use
- * the special command /sbin/mke4fs.  This can also create ext2/3
- * using the '-t fstype' option.
- *
- * On Fedora 11+, mke4fs was renamed mke2fs, and it can use the
- * '-t fstype' option to specify the filesystem type.
- *
- * So it seems best to run /sbin/mke4fs if it exists, or /sbin/mke2fs
- * otherwise.  We specify e4fsprogs in the package list to ensure it
- * is loaded if it exists.
- */
-static const char *
-get_mke2fs (void)
-{
-  static const char *const progs[] = { "/sbin/mke4fs", "/sbin/mke2fs", NULL };
-  int i;
-
-  for (i = 0; progs[i]; ++i)
-    if (access (progs[i], F_OK) == 0)
-      return progs[i];
-
-  reply_with_error ("no mke2fs binary found in appliance");
-  return NULL;
-}
-
 int
 do_mke2fs_J (const char *fstype, int blocksize, const char *device,
              const char *journal)
@@ -377,8 +408,9 @@ do_mke2fs_J (const char *fstype, int blocksize, const char *device,
   char *err;
   int r;
 
-  const char *prog = get_mke2fs ();
-  if (!prog) return -1;
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
 
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
@@ -407,8 +439,9 @@ do_mke2fs_JL (const char *fstype, int blocksize, const char *device,
   char *err;
   int r;
 
-  const char *prog = get_mke2fs ();
-  if (!prog) return -1;
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
 
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
@@ -437,8 +470,9 @@ do_mke2fs_JU (const char *fstype, int blocksize, const char *device,
   char *err;
   int r;
 
-  const char *prog = get_mke2fs ();
-  if (!prog) return -1;
+  char prog[] = "/sbin/mke2fs";
+  if (e2prog (prog) == -1)
+    return -1;
 
   char blocksize_s[32];
   snprintf (blocksize_s, sizeof blocksize_s, "%d", blocksize);
-- 
1.6.6.1

